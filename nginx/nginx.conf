events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;

    # Backend 1 upstream (port 3010)
    upstream backend1 {
        # Menggunakan least_conn untuk distribusi yang lebih merata
        least_conn;
        
        # Aktif servers
        server backend-1a:3010 max_fails=3 fail_timeout=30s;
        
        # Uncomment ketika backend-1b dan backend-1c diaktifkan
        # server backend-1b:3010 max_fails=3 fail_timeout=30s;
        # server backend-1c:3010 max_fails=3 fail_timeout=30s;
    }

    # Backend 2 upstream (port 3020)
    upstream backend2 {
        # Menggunakan least_conn untuk distribusi yang lebih merata
        least_conn;
        
        # Aktif servers
        server backend-2a:3020 max_fails=3 fail_timeout=30s;
        
        # Uncomment ketika backend-2b dan backend-2c diaktifkan
        # server backend-2b:3020 max_fails=3 fail_timeout=30s;
        # server backend-2c:3020 max_fails=3 fail_timeout=30s;
    }

    # Consumer upstream (port 3030)
    upstream consumer {
        server consumer:3030 max_fails=3 fail_timeout=30s;
    }

    # Frontend upstream (port 3000)
    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
    }

    # Server configuration untuk port 80
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Backend 1 API routing
        location /api/v1/ {
            proxy_pass http://backend1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Backend 2 API routing
        location /api/v2/ {
            proxy_pass http://backend2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Consumer API routing
        location /api/consumer/ {
            proxy_pass http://consumer;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Frontend routing (harus di akhir karena catch-all)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Untuk aplikasi SPA (Single Page Application)
            try_files $uri $uri/ @fallback;
        }

        # Fallback untuk SPA routing
        location @fallback {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server configuration untuk port 8080 (Admin/Monitoring)
    server {
        listen 8080;
        server_name localhost;

        # Nginx status untuk monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network range
            deny all;
        }

        # Backend 1 direct access untuk testing
        location /backend1/ {
            proxy_pass http://backend1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend 2 direct access untuk testing
        location /backend2/ {
            proxy_pass http://backend2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Consumer direct access untuk testing
        location /consumer/ {
            proxy_pass http://consumer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
